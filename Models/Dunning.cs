
using System;
using System.Collections.Generic;
using System.Text.Json.Serialization;
using MixMedia.MCP.LexOffice.Models;

namespace MixMedia.MCP.LexOffice.Models;

/// <summary>
/// Represents a Lexoffice dunning (reminder) document.
/// </summary>
public class Dunning
{
    /// <summary>Unique id of the dunning generated by lexoffice.</summary>
    [JsonPropertyName("id")]
    public Guid Id { get; set; }

    /// <summary>Unique id of the organization the dunning belongs to.</summary>
    [JsonPropertyName("organizationId")]
    public Guid OrganizationId { get; set; }

    /// <summary>Version (revision) number for optimistic locking.</summary>
    [JsonPropertyName("version")]
    public int Version { get; set; }

    /// <summary>Dunning number as given by the user or generated by lexoffice.</summary>
    [JsonPropertyName("dunningNumber")]
    public string? DunningNumber { get; set; }

    /// <summary>Voucher date of the dunning.</summary>
    [JsonPropertyName("voucherDate")]
    public DateTimeOffset VoucherDate { get; set; }

    /// <summary>Address of the dunning recipient.</summary>
    [JsonPropertyName("address")]
    public InvoiceAddress Address { get; set; } = new();

    /// <summary>Line items of the dunning.</summary>
    [JsonPropertyName("lineItems")]
    public List<InvoiceLineItem> LineItems { get; set; } = new();

    /// <summary>Total price of the dunning.</summary>
    [JsonPropertyName("totalPrice")]
    public InvoiceTotalPrice TotalPrice { get; set; } = new();

    /// <summary>Tax conditions of the dunning.</summary>
    [JsonPropertyName("taxConditions")]
    public InvoiceTaxConditions TaxConditions { get; set; } = new();

    /// <summary>Payment conditions of the dunning.</summary>
    [JsonPropertyName("paymentConditions")]
    public InvoicePaymentConditions PaymentConditions { get; set; } = new();

    /// <summary>Shipping conditions of the dunning.</summary>
    [JsonPropertyName("shippingConditions")]
    public InvoiceShippingConditions ShippingConditions { get; set; } = new();

    /// <summary>Title of the dunning.</summary>
    [JsonPropertyName("title")]
    public string? Title { get; set; }

    /// <summary>Introduction text of the dunning.</summary>
    [JsonPropertyName("introduction")]
    public string? Introduction { get; set; }

    /// <summary>Remark for the dunning.</summary>
    [JsonPropertyName("remark")]
    public string? Remark { get; set; }

    /// <summary>Archived flag of the dunning.</summary>
    [JsonPropertyName("archived")]
    public bool Archived { get; set; }

    /// <summary>Dunning level (e.g., 1, 2, 3).</summary>
    [JsonPropertyName("dunningLevel")]
    public int DunningLevel { get; set; }

    /// <summary>Reference to the invoice this dunning is based on.</summary>
    [JsonPropertyName("invoiceId")]
    public Guid InvoiceId { get; set; }

    /// <summary>XRechnung details (optional).</summary>
    [JsonPropertyName("xRechnung")]
    public object? XRechnung { get; set; } // Replace with a proper model if needed
}

/// <summary>
/// Represents the unit price details for an invoice line item.
/// </summary>
public class InvoiceUnitPrice
{
    /// <summary>Currency of the unit price.</summary>
    public string Currency { get; set; } = string.Empty;
    /// <summary>Net amount for the unit price.</summary>
    public decimal? NetAmount { get; set; }
    /// <summary>Gross amount for the unit price.</summary>
    public decimal? GrossAmount { get; set; }
    /// <summary>Tax rate percentage for the unit price.</summary>
    public decimal TaxRatePercentage { get; set; }
}

/// <summary>
/// Represents payment discount conditions for an invoice or dunning.
/// </summary>
public class InvoicePaymentDiscountConditions
{
    /// <summary>Discount percentage.</summary>
    public decimal DiscountPercentage { get; set; }
    /// <summary>Discount range (days).</summary>
    public int DiscountRange { get; set; }
}
